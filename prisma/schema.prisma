// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  tgId         String?  @unique @map("telegramId")
  name         String?
  username     String?
  displayName  String?
  coins        Int      @default(0)
  isAdmin      Boolean  @default(false)

  referralCode     String? @unique
  referredByUserId Int?
  referredBy       User?   @relation("UserReferrer", fields: [referredByUserId], references: [id])
  referrals        User[]  @relation("UserReferrer")

  purchases        Purchase[]
  coinTransactions CoinTransaction[] @relation("UserCoinTxns")
  adminCoinTxns    CoinTransaction[] @relation("AdminCoinTxns")
  starPayments     StarPayment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Video {
  id          Int       @id @default(autoincrement())
  // New editable human code like "013", unique but optional
  code        String?   @unique

  title       String
  description String
  url         String
  isFree      Boolean   @default(false)
  price       Int       @default(0)
  thumbUrl    String?
  category    String?
  tags        String[]  @default([])

  purchases   Purchase[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt @default(now())
}

model Purchase {
  id        Int      @id @default(autoincrement())
  userId    Int
  videoId   Int
  price     Int
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  video Video @relation(fields: [videoId], references: [id])

  @@unique([userId, videoId])
}

model CoinTransaction {
  id        Int      @id @default(autoincrement())
  userId    Int
  adminId   Int?
  delta     Int
  reason    String?
  createdAt DateTime @default(now())

  user   User  @relation(name: "UserCoinTxns",  fields: [userId],  references: [id])
  admin  User? @relation(name: "AdminCoinTxns", fields: [adminId], references: [id])
}

model StarPayment {
  id          Int      @id @default(autoincrement())
  userId      Int
  tgId        String
  chargeId    String   @unique
  amountStars Int
  coins       Int
  payload     String?
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}
