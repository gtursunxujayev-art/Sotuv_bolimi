// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  telegramId   String?   @unique
  username     String?
  displayName  String?
  coins        Int       @default(0)
  isAdmin      Boolean   @default(false)
  referredById Int?
  referredBy   User?     @relation("UserReferrals", fields: [referredById], references: [id])
  referrals    User[]    @relation("UserReferrals")
  videos       Purchase[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}


model Video {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  url         String
  thumbUrl    String?
  category    String?
  tags        String[]   @default([])
  isFree      Boolean    @default(false)
  price       Int        @default(0)
  createdAt   DateTime   @default(now())

  purchases   Purchase[]
}

model Purchase {
  id        Int      @id @default(autoincrement())
  userId    Int
  videoId   Int
  price     Int
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  video Video @relation(fields: [videoId], references: [id])

  @@unique([userId, videoId])
}

model CoinTransaction {
  id        Int      @id @default(autoincrement())
  userId    Int
  adminId   Int?
  delta     Int
  reason    String?
  createdAt DateTime @default(now())

  user   User  @relation("UserCoinTxns",  fields: [userId],  references: [id])
  admin  User? @relation("AdminCoinTxns", fields: [adminId], references: [id])

  @@index([userId, createdAt])
}
